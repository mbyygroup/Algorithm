# 特点
和红黑树类似,可以通过一些简单的规则互换,而且他们保持平衡的操作也是一样的,数学上称他们为同购的.
2,3,4的含义是指一个节点可能含有的子节点的个数.对于非叶子节点有三种可能的情况:有一个数据项的节点总
是有两个子节点,有两个数据项的节点总是有三个子节点.有三个数据项的节点总是有四个子节点.
# 查找
根据关键字查找树中是否存在.从分开始,依次向下查找,在每个节点上都调用finditem方法在当前节点中查找.
当在底层的叶节点查找完毕,整个查找过程就结束了.若没有找到则查找失败
# 插入
与查找类似,不断向下查找,直到叶节点,插入数据项.如果遇到满节点会先执行分裂操作,在插入数据项
# 分裂操作
1.创建一个新的空节点.它是要分裂节点的兄弟,在要分裂节点的右边.
2.数据项C移到新节点中.
3.数据项B移到要分裂节点的父节点中
4.数据项A保留在原来的位置上
5.最右边的两个子节点从要分裂节点处断开,连到新节点上
# 效率
难以分析,查找时间与平衡二叉树比如红黑树大致相等,都是O(logN).
# 空间使用
因为大量不满的数组被使用所以大致只利用了七分之五的可用空间,空间利用率上不如红黑树
# 高度
log2N
# 把2-3-4树转化为红黑树
把每个2-节点变为黑色节点,把每个3-节点变成一个黑色的父节点和一个红色的子节点,把每个4-节点变成一个
黑色父节点和两个红色子节点.把3-节点转化为一个父节点和一个子节点时,每个节点都可以做父节点.2-3-4树
中分裂节点和在红黑树中进行颜色变换时一样的.红黑树中的旋转对应于转化3-节点时在两种可能的倾斜方向间
变化
# 2-3树
类似于2-3-4树,除了他只能有一个或两个数据项以及以1,2或2个子节点