数组有很多缺点，在一个无序数组中可以很快进行插入(O(1)时间)，但是查找却要花费比较慢
的O(N)时间。在有序数组中查找的很快，用O(logN)的时间，但插入却花费了O(N)时间。其实有
数据结构可以同时插入和删除，查找都很快(理想的O(1)或是O(logN)时间)，但代价是程序的复
杂度。
数组的另一个问题是他们被new创建后，大小尺寸都被固定住了。但通常在开始设计程序时并不
知道会有多少数据项将会被放到数组中，所以需要猜测它的大小。如果猜的过大则会浪费空间，
猜的过小则会数组溢出，最好的情况是会向程序用户发送警告信息，最坏的情况则会导致程序崩
溃。有些更加灵活的数据结构可以随插入数据项而扩展大小，比如链表
java里有一个被称为Vector的类，使用起来像数组，但可以扩展，不过附加的功能是以效率为代
价的。当类用户使用类中的内部数组将要溢出时，插入算法会创建一个大一点儿的数组，把旧数
组中的内容复制到新数组中，然后在插入新数据项


